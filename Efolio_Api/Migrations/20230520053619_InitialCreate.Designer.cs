// <auto-generated />
using Efolio_Api.EF_Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Efolio_Api.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230520053619_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Efolio_Api.EF_Core.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EducationId"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MasterId")
                        .HasColumnType("integer");

                    b.Property<string>("StartingYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EducationId");

                    b.HasIndex("MasterId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExperienceId"));

                    b.Property<string>("CompanyDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MasterId")
                        .HasColumnType("integer");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("integer");

                    b.HasKey("ExperienceId");

                    b.HasIndex("MasterId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MasterId"));

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MasterId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Masters");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Linkedin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MasterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Twitter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProfileId");

                    b.HasIndex("MasterId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Projects", b =>
                {
                    b.Property<int>("ProjectsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectsId"));

                    b.Property<int>("MasterId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectsId");

                    b.HasIndex("MasterId");

                    b.ToTable("Projectss");
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Education", b =>
                {
                    b.HasOne("Efolio_Api.EF_Core.Master", null)
                        .WithMany("Education")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Experience", b =>
                {
                    b.HasOne("Efolio_Api.EF_Core.Master", null)
                        .WithMany("Experiences")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Profile", b =>
                {
                    b.HasOne("Efolio_Api.EF_Core.Master", null)
                        .WithOne("profile")
                        .HasForeignKey("Efolio_Api.EF_Core.Profile", "MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Projects", b =>
                {
                    b.HasOne("Efolio_Api.EF_Core.Master", null)
                        .WithMany("Project")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Efolio_Api.EF_Core.Master", b =>
                {
                    b.Navigation("Education");

                    b.Navigation("Experiences");

                    b.Navigation("Project");

                    b.Navigation("profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
